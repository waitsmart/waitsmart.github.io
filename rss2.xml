<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>星辰</title>
    <link>https://waitsmart.github.io/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>个人博客，前端学习</description>
    <pubDate>Sun, 07 Jul 2019 03:49:38 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>解决跨域的几种方式</title>
      <link>https://waitsmart.github.io/2019/07/07/%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/</link>
      <guid>https://waitsmart.github.io/2019/07/07/%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/</guid>
      <pubDate>Sun, 07 Jul 2019 02:57:32 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;什么是跨域？&quot;&gt;&lt;a href=&quot;#什么是跨域？&quot; class=&quot;headerlink&quot; title=&quot;什么是跨域？&quot;&gt;&lt;/a&gt;什么是跨域？&lt;/h2&gt;&lt;h1 id=&quot;为什么会有这个问题？&quot;&gt;&lt;a href=&quot;#为什么会有这个问题？&quot; class=&quot;headerli
        
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="什么是跨域？"><a href="#什么是跨域？" class="headerlink" title="什么是跨域？"></a>什么是跨域？</h2><h1 id="为什么会有这个问题？"><a href="#为什么会有这个问题？" class="headerlink" title="为什么会有这个问题？"></a>为什么会有这个问题？</h1><p>因为浏览器同源策略：禁止跨不同源头访问资源。<br><em>仅限于ajax<br>*</em>跨域：从一个域名下的网页，向另一个域名下的服务端发送ajax请求—受服务器同源策略限制，禁止发送**</p><h1 id="域名不同、子级域名不同、端口号不同、协议不同、同一台及其的域名和ip之间相互访问"><a href="#域名不同、子级域名不同、端口号不同、协议不同、同一台及其的域名和ip之间相互访问" class="headerlink" title="域名不同、子级域名不同、端口号不同、协议不同、同一台及其的域名和ip之间相互访问"></a>域名不同、子级域名不同、端口号不同、协议不同、同一台及其的域名和ip之间相互访问</h1><h1 id="这些都是会报错的！！"><a href="#这些都是会报错的！！" class="headerlink" title="这些都是会报错的！！"></a>这些都是会报错的！！</h1><p>##例如这些##<br><a href="http://www.a.com" target="_blank" rel="noopener">http://www.a.com</a>  -&gt;<a href="http://www.b.com" target="_blank" rel="noopener">http://www.b.com</a><br><a href="http://www.b.a.com" target="_blank" rel="noopener">http://www.b.a.com</a> -&gt; <a href="http://www.c.a.com" target="_blank" rel="noopener">http://www.c.a.com</a><br><a href="http://localhost:5500" target="_blank" rel="noopener">http://localhost:5500</a>  -&gt;<a href="http://localhost:3300" target="_blank" rel="noopener">http://localhost:3300</a><br><a href="http://localhost" target="_blank" rel="noopener">http://localhost</a>  -&gt; <a href="https://localhost" target="_blank" rel="noopener">https://localhost</a><br><a href="http://localhost" target="_blank" rel="noopener">http://localhost</a> -&gt; <a href="http://127.0.0.1" target="_blank" rel="noopener">http://127.0.0.1</a></p><h1 id="都是会报错的-CORS…Access-Control-Allow-Origin"><a href="#都是会报错的-CORS…Access-Control-Allow-Origin" class="headerlink" title="都是会报错的   CORS…Access-Control-Allow-Origin"></a>都是会报错的   CORS…Access-Control-Allow-Origin</h1><p>翻译过来就是    CORS-&gt; Cross-Origin Resource Sharing  跨域资源共享<br>Access-Control-Allow-Origin   访问  控制  允许  来源；域</p><hr><h2 id="怎么解决呢？"><a href="#怎么解决呢？" class="headerlink" title="怎么解决呢？"></a>怎么解决呢？</h2><h1 id="1-CORS方式-即-跨域资源访问技术"><a href="#1-CORS方式-即-跨域资源访问技术" class="headerlink" title="1.CORS方式 即 跨域资源访问技术"></a>1.CORS方式 即 跨域资源访问技术</h1><p>是现在比较主流的解决方式，仅服务端改代码，就可跨域<br><em>这里再说一下同源策略的本质：其实可以发送ajax请求，也可以正常执行服务端的程序，也可以顺利返回正确的结果。</em><br><em>但是，浏览器经过检查数据的来源，发现和当前网页的来源不一致，所以，到手的数据不让用！</em><br><em>怎么办呢？其实就是在服务端返回响应的响应头中伪装成指定的源头</em></p><hr><p><del>res.send(result)</del><br>res.send()是一种简写  等效于 res.writeHead()+res.write(JSON.stringify(result))+res.end</p><h1 id="可以这样子写"><a href="#可以这样子写" class="headerlink" title="可以这样子写"></a>可以这样子写</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">res.writeHead(200,&#123;</span><br><span class="line">&quot;Access-Control-Allow-Origin&quot;:&quot;http://127.0.0.1:5500&quot;</span><br><span class="line">&#125;);</span><br><span class="line">res.write(JSON.stringify(result));</span><br><span class="line">res.end()</span><br></pre></td></tr></table></figure><p>这样返回的数据，就被伪装成来自于127.0.0.1:5500的，就可以访问了。<br>也可以引入cors模块,例如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">const cors=require(&apos;cors&apos;);</span><br><span class="line">server.use(cors(&#123;</span><br><span class="line">&apos;credentials&apos;:true,</span><br><span class="line">&apos;origin&apos;:&apos;http://localhost:8100&apos;</span><br><span class="line">&#125;));</span><br></pre></td></tr></table></figure><hr><h1 id="2-JSONP方式：JSON-with-padding-填充式JSON"><a href="#2-JSONP方式：JSON-with-padding-填充式JSON" class="headerlink" title="2.JSONP方式：JSON with padding  填充式JSON"></a>2.JSONP方式：JSON with padding  填充式JSON</h1><p>jQuery对jsonp方式跨域进行了终极的简化:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    url:</span><br><span class="line">    type:</span><br><span class="line">    data:</span><br><span class="line">    dataType:&quot;jsonp&quot;</span><br><span class="line">    success:function()&#123;</span><br><span class="line">     ... ...</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>先写这么多吧，我比较熟练的就是cors了，写的比较简单，应该是简陋吧，只是我个人学习过程中的一点收获。<br>毕竟~~有google</p>]]></content:encoded>
      
      <comments>https://waitsmart.github.io/2019/07/07/%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/#disqus_thread</comments>
    </item>
    
    <item>
      <title>第二篇 说点什么好呢</title>
      <link>https://waitsmart.github.io/2019/06/25/%E7%AC%AC%E4%BA%8C%E7%AF%87-%E8%AF%B4%E7%82%B9%E4%BB%80%E4%B9%88%E5%A5%BD%E5%91%A2/</link>
      <guid>https://waitsmart.github.io/2019/06/25/%E7%AC%AC%E4%BA%8C%E7%AF%87-%E8%AF%B4%E7%82%B9%E4%BB%80%E4%B9%88%E5%A5%BD%E5%91%A2/</guid>
      <pubDate>Tue, 25 Jun 2019 13:41:23 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/hongmaju/light7Local/master/img/productShow/20170518152848.png&quot; alt=&quot;测试图片&quot;&gt;&lt;/p&gt;

        
      
      </description>
      
      <content:encoded><![CDATA[<p><img src="https://raw.githubusercontent.com/hongmaju/light7Local/master/img/productShow/20170518152848.png" alt="测试图片"></p>]]></content:encoded>
      
      <comments>https://waitsmart.github.io/2019/06/25/%E7%AC%AC%E4%BA%8C%E7%AF%87-%E8%AF%B4%E7%82%B9%E4%BB%80%E4%B9%88%E5%A5%BD%E5%91%A2/#disqus_thread</comments>
    </item>
    
    <item>
      <title>我的测试文字</title>
      <link>https://waitsmart.github.io/2019/06/25/%E6%88%91%E7%9A%84%E6%B5%8B%E8%AF%95%E6%96%87%E5%AD%97/</link>
      <guid>https://waitsmart.github.io/2019/06/25/%E6%88%91%E7%9A%84%E6%B5%8B%E8%AF%95%E6%96%87%E5%AD%97/</guid>
      <pubDate>Tue, 25 Jun 2019 03:06:40 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;$$&lt;br&gt;\begin{eqnarray}&lt;br&gt;\nabla\cdot\vec{E} &amp;amp;=&amp;amp; \frac{\rho}{\epsilon_0} \&lt;br&gt;\nabla\cdot\vec{B} &amp;amp;=&amp;amp; 0 \&lt;br&gt;\nabla\times\
        
      
      </description>
      
      <content:encoded><![CDATA[<p>$$<br>\begin{eqnarray}<br>\nabla\cdot\vec{E} &amp;=&amp; \frac{\rho}{\epsilon_0} \<br>\nabla\cdot\vec{B} &amp;=&amp; 0 \<br>\nabla\times\vec{E} &amp;=&amp; -\frac{\partial B}{\partial t} \<br>\nabla\times\vec{B} &amp;=&amp; \mu_0\left(\vec{J}+\epsilon_0\frac{\partial E}{\partial t} \right)<br>\end{eqnarray}<br>$$</p>]]></content:encoded>
      
      <comments>https://waitsmart.github.io/2019/06/25/%E6%88%91%E7%9A%84%E6%B5%8B%E8%AF%95%E6%96%87%E5%AD%97/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://waitsmart.github.io/2019/06/25/hello-world/</link>
      <guid>https://waitsmart.github.io/2019/06/25/hello-world/</guid>
      <pubDate>Tue, 25 Jun 2019 01:22:46 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
        
      
      </description>
      
      <content:encoded><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content:encoded>
      
      <comments>https://waitsmart.github.io/2019/06/25/hello-world/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
